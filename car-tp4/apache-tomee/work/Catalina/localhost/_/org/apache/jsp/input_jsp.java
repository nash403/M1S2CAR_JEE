/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat (TomEE)/7.0.55 (1.7.1)
 * Generated at: 2016-04-01 09:03:56 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class input_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<html>\n");
      out.write("<style>\n");
      out.write("\tform {\n");
      out.write("\t  /* Just to center the form on the page */\n");
      out.write("\t  margin: 0 auto;\n");
      out.write("\t  width: 400px;\n");
      out.write("\t\n");
      out.write("\t  /* To see the limits of the form */\n");
      out.write("\t  padding: 1em;\n");
      out.write("\t  border: 1px solid #CCC;\n");
      out.write("\t  border-radius: 1em;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tdiv + div {\n");
      out.write("\t  margin-top: 1em;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tlabel {\n");
      out.write("\t  /* To make sure that all label have the same size and are properly align */\n");
      out.write("\t  display: inline-block;\n");
      out.write("\t  width: 90px;\n");
      out.write("\t  text-align: right;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tinput, textarea {\n");
      out.write("\t  /* To make sure that all text field have the same font settings\n");
      out.write("\t     By default, textarea are set with a monospace font */\n");
      out.write("\t  font: 1em sans-serif;\n");
      out.write("\t\n");
      out.write("\t  /* To give the same size to all text field */\n");
      out.write("\t  width: 300px;\n");
      out.write("\t\n");
      out.write("\t  -moz-box-sizing: border-box;\n");
      out.write("\t       box-sizing: border-box;\n");
      out.write("\t\n");
      out.write("\t  /* To harmonize the look & feel of text field border */\n");
      out.write("\t  border: 1px solid #999;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tinput:focus, textarea:focus {\n");
      out.write("\t  /* To give a little highligh on active elements */\n");
      out.write("\t  border-color: #000;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\ttextarea {\n");
      out.write("\t  /* To properly align multiline text field with their label */\n");
      out.write("\t  vertical-align: top;\n");
      out.write("\t\n");
      out.write("\t  /* To give enough room to type some text */\n");
      out.write("\t  height: 5em;\n");
      out.write("\t\n");
      out.write("\t  /* To allow users to resize any textarea vertically\n");
      out.write("\t     It works only on Chrome, Firefox and Safari */\n");
      out.write("\t  resize: vertical;\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\t.button {\n");
      out.write("\t  /* To position the buttons to the same position of the text fields */\n");
      out.write("\t  padding-left: 90px; /* same size as the label elements */\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tbutton {\n");
      out.write("\t  /* This extra magin represent the same space as the space between\n");
      out.write("\t     the labels and their text fields */\n");
      out.write("\t  margin-left: .5em;\n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("<form action=\"input.jsp\" method=\"post\">\n");
      out.write("  <div>\n");
      out.write("    <label for=\"title\">Titre :</label>\n");
      out.write("    <input type=\"text\" id=\"title\" name=\"title\"");


String titleInput = request.getParameter("title");
if ( titleInput != null ) {
    out.print("value=\""+titleInput+"\"");
}


      out.write(">\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  <div>\n");
      out.write("    <label for=\"author\">Nom d'auteur:</label>\n");
      out.write("    <input type=\"text\" id=\"author\" name=\"author\"");


String authorInput = request.getParameter("author");
if ( authorInput != null ) {
    out.print("value=\""+authorInput+"\"");
}


      out.write("/>\n");
      out.write("  </div>\n");
      out.write("\n");
      out.write("  <div>\n");
      out.write("    <label for=\"year\">Ann&eacute;e de parution:</label>\n");
      out.write("    <input type=\"number\" id=\"year\" name=\"year\" ");


String yearInput = request.getParameter("year");
if ( yearInput != null ) {
    out.print("value=\""+yearInput+"\"");
}


      out.write("/>\n");
      out.write("  </div>\n");
      out.write(" \n");
      out.write("  <div class=\"button\"> \n");
      out.write("    <button type=\"submit\">Valider</button>\n");
      out.write("  </div>\n");
      out.write("</form>\n");
      out.write("\n");

if ( authorInput != null ) {
    out.print("Auteur : "+authorInput+"<br/>");
    out.print("Titre : "+titleInput+"<br/>");
    out.print("Ann&eacute; : "+yearInput+"<br/><p/>");
}


      out.write("\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
